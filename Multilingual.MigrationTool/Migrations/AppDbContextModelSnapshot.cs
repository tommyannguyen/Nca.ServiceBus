// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Multilingual.MigrationTool;

namespace Multilingual.MigrationTool.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Multilingual.Abtraction.MultilingualString", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Text")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("MultilingualStrings");
                });

            modelBuilder.Entity("Multilingual.Abtraction.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("ProductNameId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("ProductNameId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("Multilingual.Abtraction.Translation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<bool>("IsAutomatic")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Language")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<Guid?>("MultilingualStringId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Text")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.HasIndex("MultilingualStringId");

                    b.ToTable("Translation");
                });

            modelBuilder.Entity("Multilingual.Abtraction.Product", b =>
                {
                    b.HasOne("Multilingual.Abtraction.MultilingualString", "ProductName")
                        .WithMany()
                        .HasForeignKey("ProductNameId");
                });

            modelBuilder.Entity("Multilingual.Abtraction.Translation", b =>
                {
                    b.HasOne("Multilingual.Abtraction.MultilingualString", null)
                        .WithMany("Translations")
                        .HasForeignKey("MultilingualStringId");
                });
#pragma warning restore 612, 618
        }
    }
}
